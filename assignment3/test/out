################## pointer before #################
  %a.addr = alloca i32, align 4
################## pointer before #################
  %b.addr = alloca i32, align 4
a.addr: {
	i32 0
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	a,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	a,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	a,
},
################## pointer before #################
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	a,
},
################## pointer before #################
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
i32 0
: {
	a,
},
################## pointer before #################
  %add = add nsw i32 %0, %1, !dbg !17
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},
i32 0
: {
	a,
},
################## pointer before #################
  ret i32 %add, !dbg !18
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},
i32 0
: {
	a,
},
1: plus------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %add = add nsw i32 %0, %1, !dbg !17
  ret i32 %add, !dbg !18


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},
i32 0
: {
	a,
},

------------------------------
################## pointer before #################
  %a.addr = alloca i32, align 4
################## pointer before #################
  %b.addr = alloca i32, align 4
a.addr: {
	i32 2
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !20, metadata !DIExpression()), !dbg !21
i32 2
: {
	a,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 2
: {
	a,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !22, metadata !DIExpression()), !dbg !23
i32 2
: {
	a,
},
i32 3
: {
	b,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
################## pointer before #################
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
i32 2
: {
	a,
},
i32 3
: {
	b,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
################## pointer before #################
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
i32 2
: {
	a,
},
i32 3
: {
	b,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
################## pointer before #################
  %sub = sub nsw i32 %0, %1, !dbg !17
i32 2
: {
	a,
},
i32 3
: {
	b,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},
################## pointer before #################
  ret i32 %sub, !dbg !18
i32 2
: {
	a,
},
i32 3
: {
	b,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},
2: minus------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %add = add nsw i32 %0, %1, !dbg !17
  ret i32 %add, !dbg !18


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %sub = sub nsw i32 %0, %1, !dbg !17
  ret i32 %sub, !dbg !18


	in : 
	out :  i32 2
: {
	a,
},
i32 3
: {
	b,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},

------------------------------
################## pointer before #################
  %a.addr = alloca i32, align 4
################## pointer before #################
  %b.addr = alloca i32, align 4
a.addr: {
	i32 4
,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fptr*, align 8
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fptr*, align 8
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !36, metadata !DIExpression()), !dbg !37
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !38, metadata !DIExpression()), !dbg !39
i32 5
: {
	b,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
i32 5
: {
	b,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !40, metadata !DIExpression()), !dbg !41
i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !42, metadata !DIExpression()), !dbg !43
i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 7
: {
	d_fptr,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 7
: {
	d_fptr,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !27
i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 7
: {
	d_fptr,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	c_fptr,
},
################## pointer before #################
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 7
: {
	d_fptr,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	c_fptr,
},
p_fptr: {
	c_fptr,
},
################## pointer before #################
  ret i32 (i32, i32)* %1, !dbg !28
i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 7
: {
	d_fptr,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	c_fptr,
},
p_fptr: {
	c_fptr,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	c_fptr,
},
3: foo------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %add = add nsw i32 %0, %1, !dbg !17
  ret i32 %add, !dbg !18


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %sub = sub nsw i32 %0, %1, !dbg !17
  ret i32 %sub, !dbg !18


	in : 
	out :  i32 2
: {
	a,
},
i32 3
: {
	b,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !18, metadata !DIExpression()), !dbg !19
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !20, metadata !DIExpression()), !dbg !21
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !22, metadata !DIExpression()), !dbg !23
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !24, metadata !DIExpression()), !dbg !25
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !27
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
  ret i32 (i32, i32)* %1, !dbg !28


	in : 
	out :  i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 7
: {
	d_fptr,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	c_fptr,
},
p_fptr: {
	c_fptr,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	c_fptr,
},

------------------------------
################## pointer before #################
  %retval = alloca i32 (i32, i32)*, align 8
################## pointer before #################
  %a.addr = alloca i32, align 4
retval: {
	i32 8
,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fptr*, align 8
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fptr*, align 8
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !48, metadata !DIExpression()), !dbg !49
i32 9
: {
	a,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 9
: {
	a,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !50, metadata !DIExpression()), !dbg !51
i32 9
: {
	a,
},
i32 10
: {
	b,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
i32 9
: {
	a,
},
i32 10
: {
	b,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !52, metadata !DIExpression()), !dbg !53
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !54, metadata !DIExpression()), !dbg !55
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  %cmp = icmp sgt i32 %0, 0, !dbg !28
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
################## pointer before #################
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !29
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
################## pointer before #################
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
################## pointer before #################
  %cmp1 = icmp slt i32 %1, 0, !dbg !31
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
################## pointer before #################
  br i1 %cmp1, label %if.then, label %if.end, !dbg !32
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
################## pointer before #################
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !35
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
################## pointer before #################
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
p_fptr: {
	d_fptr,
},
################## pointer before #################
  store i32 (i32, i32)* %3, i32 (i32, i32)** %retval, align 8, !dbg !36
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
p_fptr: {
	d_fptr,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
},
################## pointer before #################
  br label %return, !dbg !36
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
i32 8
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
p_fptr: {
	d_fptr,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
},
################## pointer before #################
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
################## pointer before #################
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
################## pointer before #################
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	c_fptr,
},
################## pointer before #################
  store i32 (i32, i32)* %5, i32 (i32, i32)** %retval, align 8, !dbg !39
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	c_fptr,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
},
################## pointer before #################
  br label %return, !dbg !39
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
i32 8
: {
	c_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	c_fptr,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
},
################## pointer before #################
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
i32 8
: {
	c_fptr,
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
p_fptr: {
	d_fptr,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	c_fptr,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
},
################## pointer before #################
  ret i32 (i32, i32)* %6, !dbg !40
i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
i32 8
: {
	c_fptr,
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
p_fptr: {
	d_fptr,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	c_fptr,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	c_fptr,
	d_fptr,
},
4: clever------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %add = add nsw i32 %0, %1, !dbg !17
  ret i32 %add, !dbg !18


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %sub = sub nsw i32 %0, %1, !dbg !17
  ret i32 %sub, !dbg !18


	in : 
	out :  i32 2
: {
	a,
},
i32 3
: {
	b,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !18, metadata !DIExpression()), !dbg !19
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !20, metadata !DIExpression()), !dbg !21
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !22, metadata !DIExpression()), !dbg !23
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !24, metadata !DIExpression()), !dbg !25
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !27
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
  ret i32 (i32, i32)* %1, !dbg !28


	in : 
	out :  i32 6
: {
	c_fptr,
},
i32 5
: {
	b,
},
i32 7
: {
	d_fptr,
},
i32 4
: {
	a,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	c_fptr,
},
p_fptr: {
	c_fptr,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	c_fptr,
},


entry:
  %retval = alloca i32 (i32, i32)*, align 8
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !18, metadata !DIExpression()), !dbg !19
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !20, metadata !DIExpression()), !dbg !21
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !22, metadata !DIExpression()), !dbg !23
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !24, metadata !DIExpression()), !dbg !25
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
  %cmp = icmp sgt i32 %0, 0, !dbg !28
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !29


	in : 
	out :  i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},


land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
  %cmp1 = icmp slt i32 %1, 0, !dbg !31
  br i1 %cmp1, label %if.then, label %if.end, !dbg !32


	in : i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},

	out :  i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},


if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !35
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
  store i32 (i32, i32)* %3, i32 (i32, i32)** %retval, align 8, !dbg !36
  br label %return, !dbg !36


	in : i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},

	out :  i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
i32 8
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
p_fptr: {
	d_fptr,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
},


if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
  store i32 (i32, i32)* %5, i32 (i32, i32)** %retval, align 8, !dbg !39
  br label %return, !dbg !39


	in : i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},

	out :  i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
i32 8
: {
	c_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	c_fptr,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
},


return:                                           ; preds = %if.end, %if.then
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
  ret i32 (i32, i32)* %6, !dbg !40


	in : i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
i32 8
: {
	c_fptr,
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
p_fptr: {
	d_fptr,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	c_fptr,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
},

	out :  i32 9
: {
	a,
},
i32 10
: {
	b,
},
i32 11
: {
	c_fptr,
},
i32 12
: {
	d_fptr,
},
i32 8
: {
	c_fptr,
	d_fptr,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
},
p_fptr: {
	d_fptr,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	c_fptr,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	c_fptr,
	d_fptr,
},

------------------------------
################## pointer before #################
  %x.addr = alloca i8, align 1
################## pointer before #################
  %op1.addr = alloca i32, align 4
x.addr: {
	i32 13
,
},
################## pointer before #################
  %op2.addr = alloca i32, align 4
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
################## pointer before #################
  %a_fptr = alloca %struct.fptr, align 8
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
################## pointer before #################
  %s_fptr = alloca %struct.fptr, align 8
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
################## pointer before #################
  %goo_ptr = alloca i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, align 8
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
################## pointer before #################
  %t_fptr = alloca i32 (i32, i32)*, align 8
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
################## pointer before #################
  store i8 %x, i8* %x.addr, align 1
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !75, metadata !DIExpression()), !dbg !76
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  store i32 %op1, i32* %op1.addr, align 4
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %op1.addr, metadata !77, metadata !DIExpression()), !dbg !78
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
i32 14
: {
	op1,
},
################## pointer before #################
  store i32 %op2, i32* %op2.addr, align 4
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
i32 14
: {
	op1,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %op2.addr, metadata !79, metadata !DIExpression()), !dbg !80
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !81, metadata !DIExpression()), !dbg !82
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !26
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
################## pointer before #################
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr* %s_fptr, metadata !85, metadata !DIExpression()), !dbg !86
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
################## pointer before #################
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %s_fptr, i32 0, i32 0, !dbg !30
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
################## pointer before #################
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !31
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, metadata !89, metadata !DIExpression()), !dbg !91
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !92, metadata !DIExpression()), !dbg !93
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
################## pointer before #################
  store i32 (i32, i32)* null, i32 (i32, i32)** %t_fptr, align 8, !dbg !39
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
################## pointer before #################
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %conv = sext i8 %0 to i32, !dbg !40
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %cmp = icmp eq i32 %conv, 43, !dbg !42
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br i1 %cmp, label %if.then, label %if.else, !dbg !43
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)* @foo, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !44
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br label %if.end7, !dbg !46
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %conv3 = sext i8 %1 to i32, !dbg !47
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %cmp4 = icmp eq i32 %conv3, 45, !dbg !49
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !50
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)* @clever, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !51
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br label %if.end, !dbg !53
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br label %if.end7
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %call = call i32 (i32, i32)* %2(i32 %3, i32 %4, %struct.fptr* %a_fptr, %struct.fptr* %s_fptr), !dbg !54
i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %a.addr = alloca i32, align 4
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fptr*, align 8
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fptr*, align 8
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !36, metadata !DIExpression()), !dbg !37
i32 13
: {
	x,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 13
: {
	x,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !38, metadata !DIExpression()), !dbg !39
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !40, metadata !DIExpression()), !dbg !41
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !42, metadata !DIExpression()), !dbg !43
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !27
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  ret i32 (i32, i32)* %1, !dbg !28
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
returned from foo
merge result
################## pointer before #################
  %retval = alloca i32 (i32, i32)*, align 8
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %a.addr = alloca i32, align 4
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fptr*, align 8
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fptr*, align 8
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !48, metadata !DIExpression()), !dbg !49
i32 9
: {
	op1,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 9
: {
	op1,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !50, metadata !DIExpression()), !dbg !51
i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !52, metadata !DIExpression()), !dbg !53
i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 11
: {
	i32 16
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 11
: {
	i32 16
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !54, metadata !DIExpression()), !dbg !55
i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 11
: {
	i32 16
,
},
i32 12
: {
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 11
: {
	i32 16
,
},
i32 12
: {
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %cmp = icmp sgt i32 %0, 0, !dbg !28
i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 11
: {
	i32 16
,
},
i32 12
: {
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	op1,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !29
i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 11
: {
	i32 16
,
},
i32 12
: {
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	op1,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %cmp1 = icmp slt i32 %1, 0, !dbg !31
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br i1 %cmp1, label %if.then, label %if.end, !dbg !32
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !35
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store i32 (i32, i32)* %3, i32 (i32, i32)** %retval, align 8, !dbg !36
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	i32 17
,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br label %return, !dbg !36
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 8
: {
	i32 17
,
	minus,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	i32 17
,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  store i32 (i32, i32)* %5, i32 (i32, i32)** %retval, align 8, !dbg !39
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	i32 16
,
	plus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  br label %return, !dbg !39
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 8
: {
	i32 16
,
	plus,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	i32 16
,
	plus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  ret i32 (i32, i32)* %6, !dbg !40
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
returned from clever
merge result
################## pointer before #################
  store i32 (i32, i32)* %call, i32 (i32, i32)** %t_fptr, align 8, !dbg !57
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},
################## pointer before #################
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %call8 = call i32 %5(i32 %6, i32 %7), !dbg !58
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %a.addr = alloca i32, align 4
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 1
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 1
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 1
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %add = add nsw i32 %0, %1, !dbg !17
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 1
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  ret i32 %add, !dbg !18
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 1
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
returned from plus
merge result
################## pointer before #################
  %a.addr = alloca i32, align 4
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !20, metadata !DIExpression()), !dbg !21
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !22, metadata !DIExpression()), !dbg !23
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
i32 3
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
i32 3
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
i32 3
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  %sub = sub nsw i32 %0, %1, !dbg !17
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
i32 3
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
################## pointer before #################
  ret i32 %sub, !dbg !18
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
i32 3
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
returned from minus
merge result
################## pointer before #################
  ret i32 0, !dbg !61
i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
i32 3
: {
	op2,
},
i32 1
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
call8: {
	add,
	sub,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
5: moo------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %add = add nsw i32 %0, %1, !dbg !17
  ret i32 %add, !dbg !18


	in : i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},

	out :  i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 1
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
call8: {
	add,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !11, metadata !DIExpression()), !dbg !12
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !13, metadata !DIExpression()), !dbg !14
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
  %sub = sub nsw i32 %0, %1, !dbg !17
  ret i32 %sub, !dbg !18


	in : i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},

	out :  i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
i32 3
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
call8: {
	sub,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !18, metadata !DIExpression()), !dbg !19
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !20, metadata !DIExpression()), !dbg !21
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !22, metadata !DIExpression()), !dbg !23
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !24, metadata !DIExpression()), !dbg !25
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !27
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
  ret i32 (i32, i32)* %1, !dbg !28


	in : i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
call: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


entry:
  %retval = alloca i32 (i32, i32)*, align 8
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !18, metadata !DIExpression()), !dbg !19
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !20, metadata !DIExpression()), !dbg !21
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !22, metadata !DIExpression()), !dbg !23
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !24, metadata !DIExpression()), !dbg !25
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
  %cmp = icmp sgt i32 %0, 0, !dbg !28
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !29


	in : i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 9
: {
	op1,
},
i32 10
: {
	op2,
},
i32 11
: {
	i32 16
,
},
i32 12
: {
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	op1,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
  %cmp1 = icmp slt i32 %1, 0, !dbg !31
  br i1 %cmp1, label %if.then, label %if.end, !dbg !32


	in : i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !35
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
  store i32 (i32, i32)* %3, i32 (i32, i32)** %retval, align 8, !dbg !36
  br label %return, !dbg !36


	in : i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 8
: {
	i32 17
,
	minus,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	i32 17
,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
  store i32 (i32, i32)* %5, i32 (i32, i32)** %retval, align 8, !dbg !39
  br label %return, !dbg !39


	in : i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 8
: {
	i32 16
,
	plus,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	i32 16
,
	plus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


return:                                           ; preds = %if.end, %if.then
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
  ret i32 (i32, i32)* %6, !dbg !40


	in : i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


entry:
  %x.addr = alloca i8, align 1
  %op1.addr = alloca i32, align 4
  %op2.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fptr, align 8
  %goo_ptr = alloca i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, align 8
  %t_fptr = alloca i32 (i32, i32)*, align 8
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !12, metadata !DIExpression()), !dbg !13
  store i32 %op1, i32* %op1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op1.addr, metadata !14, metadata !DIExpression()), !dbg !15
  store i32 %op2, i32* %op2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op2.addr, metadata !16, metadata !DIExpression()), !dbg !17
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !18, metadata !DIExpression()), !dbg !25
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !26
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
  call void @llvm.dbg.declare(metadata %struct.fptr* %s_fptr, metadata !28, metadata !DIExpression()), !dbg !29
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %s_fptr, i32 0, i32 0, !dbg !30
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !31
  call void @llvm.dbg.declare(metadata i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, metadata !32, metadata !DIExpression()), !dbg !37
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !38, metadata !DIExpression()), !dbg !39
  store i32 (i32, i32)* null, i32 (i32, i32)** %t_fptr, align 8, !dbg !39
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
  %conv = sext i8 %0 to i32, !dbg !40
  %cmp = icmp eq i32 %conv, 43, !dbg !42
  br i1 %cmp, label %if.then, label %if.else, !dbg !43


	in : 
	out :  i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


if.then:                                          ; preds = %entry
  store i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)* @foo, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !44
  br label %if.end7, !dbg !46


	in : i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


if.else:                                          ; preds = %entry
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
  %conv3 = sext i8 %1 to i32, !dbg !47
  %cmp4 = icmp eq i32 %conv3, 45, !dbg !49
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !50


	in : i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


if.then6:                                         ; preds = %if.else
  store i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)* @clever, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !51
  br label %if.end, !dbg !53


	in : i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7


	in : i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
},
i32 19
: {
	i32 (i32, i32)* null
,
},


if.end7:                                          ; preds = %if.end, %if.then
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
  %call = call i32 (i32, i32)* %2(i32 %3, i32 %4, %struct.fptr* %a_fptr, %struct.fptr* %s_fptr), !dbg !54
  store i32 (i32, i32)* %call, i32 (i32, i32)** %t_fptr, align 8, !dbg !57
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
  %call8 = call i32 %5(i32 %6, i32 %7), !dbg !58
  ret i32 0, !dbg !61


	in : i32 13
: {
	x,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 (i32, i32)* null
,
},

	out :  i32 9
: {
	a,
	op1,
},
i32 10
: {
	b,
	op2,
},
i32 11
: {
	c_fptr,
	i32 16
,
},
i32 12
: {
	d_fptr,
	i32 17
,
},
i32 6
: {
	i32 16
,
},
i32 5
: {
	op2,
},
i32 8
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
i32 13
: {
	x,
},
i32 7
: {
	i32 17
,
},
i32 4
: {
	op1,
},
i32 2
: {
	op1,
},
i32 3
: {
	op2,
},
i32 1
: {
	op2,
},
call: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
a: {
	op1,
},
b: {
	op2,
},
a.addr: {
	i32 2
,
},
b.addr: {
	i32 3
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !15
: {
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !16
: {
	op2,
},
i32 0
: {
	op1,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
a.addr: {
	i32 4
,
},
b.addr: {
	i32 5
,
},
c_fptr.addr: {
	i32 6
,
},
d_fptr.addr: {
	i32 7
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !26
: {
	i32 16
,
},
p_fptr: {
	i32 16
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !27
: {
	plus,
},
a: {
	op1,
},
b: {
	op2,
},
c_fptr: {
	i32 16
,
},
d_fptr: {
	i32 17
,
},
retval: {
	i32 8
,
},
a.addr: {
	i32 9
,
},
b.addr: {
	i32 10
,
},
c_fptr.addr: {
	i32 11
,
},
d_fptr.addr: {
	i32 12
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !26
: {
	a,
	op1,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !30
: {
	b,
	op2,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !33
: {
	d_fptr,
	i32 17
,
},
p_fptr: {
	d_fptr,
	i32 17
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !35
: {
	d_fptr,
	i32 17
,
	minus,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
	i32 16
,
},
p_fptr2: {
	c_fptr,
	i32 16
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr2, align 8, !dbg !38
: {
	c_fptr,
	i32 16
,
	plus,
},
  %6 = load i32 (i32, i32)*, i32 (i32, i32)** %retval, align 8, !dbg !40
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
x.addr: {
	i32 13
,
},
op1.addr: {
	i32 14
,
},
op2.addr: {
	i32 15
,
},
a_fptr: {
	i32 16
,
},
s_fptr: {
	i32 17
,
},
goo_ptr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
p_fptr: {
	i32 16
,
},
p_fptr1: {
	i32 17
,
},
  %0 = load i8, i8* %x.addr, align 1, !dbg !40
: {
	x,
},
  %1 = load i8, i8* %x.addr, align 1, !dbg !47
: {
	x,
},
  %2 = load i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)*, i32 (i32, i32)* (i32, i32, %struct.fptr*, %struct.fptr*)** %goo_ptr, align 8, !dbg !54
: {
	clever,
	foo,
},
  %3 = load i32, i32* %op1.addr, align 4, !dbg !55
: {
	op1,
},
  %4 = load i32, i32* %op2.addr, align 4, !dbg !56
: {
	op2,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !58
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},
  %6 = load i32, i32* %op1.addr, align 4, !dbg !59
: {
	op1,
},
  %7 = load i32, i32* %op2.addr, align 4, !dbg !60
: {
	op2,
},
call8: {
	add,
	sub,
},
i32 14
: {
	op1,
},
i32 15
: {
	op2,
},
i32 16
: {
	plus,
},
i32 17
: {
	minus,
},
i32 18
: {
	clever,
	foo,
},
i32 19
: {
	i32 17
,
	plus,
	i32 16
,
	c_fptr,
	d_fptr,
	minus,
},

------------------------------
41 : foo, clever
42 : plus, minus
