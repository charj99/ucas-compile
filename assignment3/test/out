################## pointer before #################
  %a.addr = alloca i32, align 4
################## pointer before #################
  %b.addr = alloca i32, align 4
a.addr: {
	i32 0
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	a,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	a,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	a,
},
################## pointer before #################
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
i32 0
: {
	a,
},
################## pointer before #################
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
i32 0
: {
	a,
},
################## pointer before #################
  %add = add nsw i32 %0, %1, !dbg !27
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},
################## pointer before #################
  ret i32 %add, !dbg !28
i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},
1: plus------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},

------------------------------
################## pointer before #################
  %x.addr = alloca i32, align 4
################## pointer before #################
  %a_fptr = alloca %struct.fptr, align 8
x.addr: {
	i32 2
,
},
################## pointer before #################
  %b_fptr = alloca %struct.fptr, align 8
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
################## pointer before #################
  %s_fptr = alloca %struct.fsptr, align 8
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
b_fptr: {
	i32 4
,
},
################## pointer before #################
  %r_fptr = alloca %struct.fsptr, align 8
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
################## pointer before #################
  %w_fptr = alloca %struct.fsptr*, align 8
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
################## pointer before #################
  store i32 %x, i32* %x.addr, align 4
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !100, metadata !DIExpression()), !dbg !101
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !102, metadata !DIExpression()), !dbg !103
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
################## pointer before #################
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	i32 3
,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !106, metadata !DIExpression()), !dbg !107
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
################## pointer before #################
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
################## pointer before #################
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	i32 4
,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !110, metadata !DIExpression()), !dbg !111
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
################## pointer before #################
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
################## pointer before #################
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	i32 5
,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !114, metadata !DIExpression()), !dbg !115
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
################## pointer before #################
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
################## pointer before #################
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	i32 6
,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !118, metadata !DIExpression()), !dbg !119
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
################## pointer before #################
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
################## pointer before #################
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
################## pointer before #################
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
i32 2
: {
	x,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
################## pointer before #################
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
################## pointer before #################
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %cmp = icmp sgt i32 %4, 1, !dbg !49
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
################## pointer before #################
  br i1 %cmp, label %if.then, label %if.else, !dbg !50
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
################## pointer before #################
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
################## pointer before #################
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
################## pointer before #################
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  br label %if.end, !dbg !55
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
################## pointer before #################
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
################## pointer before #################
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
################## pointer before #################
  br label %if.end
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
################## pointer before #################
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
################## pointer before #################
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
################## pointer before #################
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  ret void, !dbg !64
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
2: moo------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},

	out :  

entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : 
	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},

------------------------------
################## pointer before #################
  %a.addr = alloca i32, align 4
################## pointer before #################
  %b.addr = alloca i32, align 4
a.addr: {
	i32 8
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !30, metadata !DIExpression()), !dbg !31
i32 8
: {
	a,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 8
: {
	a,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !32, metadata !DIExpression()), !dbg !33
i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
################## pointer before #################
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
################## pointer before #################
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
################## pointer before #################
  %sub = sub nsw i32 %0, %1, !dbg !27
i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
################## pointer before #################
  ret i32 %sub, !dbg !28
i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
3: minus------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %sub = sub nsw i32 %0, %1, !dbg !27
  ret i32 %sub, !dbg !28


	in : 
	out :  i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},

	out :  

entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : 
	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},

------------------------------
################## pointer before #################
  %a.addr = alloca i32, align 4
################## pointer before #################
  %b.addr = alloca i32, align 4
a.addr: {
	i32 10
,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fptr*, align 8
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fptr*, align 8
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
################## pointer before #################
  %t_fptr = alloca i32 (i32, i32)*, align 8
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !41, metadata !DIExpression()), !dbg !42
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !43, metadata !DIExpression()), !dbg !44
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
################## pointer before #################
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !45, metadata !DIExpression()), !dbg !46
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
i32 12
: {
	c_fptr,
},
################## pointer before #################
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
i32 12
: {
	c_fptr,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !47, metadata !DIExpression()), !dbg !48
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !49, metadata !DIExpression()), !dbg !50
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
################## pointer before #################
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
################## pointer before #################
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
################## pointer before #################
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
################## pointer before #################
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	c_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	d_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	d_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	c_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	c_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	c_fptr,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	c_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	c_fptr,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	a,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	c_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	c_fptr,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	a,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	b,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
################## pointer before #################
  ret i32 %call, !dbg !47
i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	c_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	c_fptr,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	a,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	b,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},
4: clever------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %sub = sub nsw i32 %0, %1, !dbg !27
  ret i32 %sub, !dbg !28


	in : 
	out :  i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  %t_fptr = alloca i32 (i32, i32)*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
  ret i32 %call, !dbg !47


	in : 
	out :  i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	c_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	c_fptr,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	a,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	b,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},

	out :  

entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : 
	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},

------------------------------
################## pointer before #################
  %a.addr = alloca i32, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fsptr*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fsptr*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
################## pointer before #################
  %t_fptr = alloca %struct.fptr, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !69, metadata !DIExpression()), !dbg !70
i32 15
: {
	i32 1
,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
i32 15
: {
	i32 1
,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !71, metadata !DIExpression()), !dbg !72
i32 15
: {
	i32 1
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
i32 15
: {
	i32 1
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !73, metadata !DIExpression()), !dbg !74
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !75, metadata !DIExpression()), !dbg !76
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !77, metadata !DIExpression()), !dbg !78
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
################## pointer before #################
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
################## pointer before #################
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
################## pointer before #################
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
################## pointer before #################
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
################## pointer before #################
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
################## pointer before #################
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
################## pointer before #################
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
################## pointer before #################
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
################## pointer before #################
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
################## pointer before #################
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
################## pointer before #################
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	t_fptr,
},
################## pointer before #################
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 19
,
},
################## pointer before #################
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 19
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
################## pointer before #################
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 19
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},
################## pointer before #################
  ret i32 %call4, !dbg !50
i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 19
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},
5: foo------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %sub = sub nsw i32 %0, %1, !dbg !27
  ret i32 %sub, !dbg !28


	in : 
	out :  i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  %t_fptr = alloca i32 (i32, i32)*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
  ret i32 %call, !dbg !47


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},

	out :  i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	c_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	c_fptr,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	a,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	b,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},

	out :  i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 19
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},


entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : call3: {
	call4,
},
call6: {
	call4,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},

------------------------------
################## pointer before #################
  %x.addr = alloca i32, align 4
call3: {
	call4,
},
call6: {
	call4,
},
################## pointer before #################
  %a_fptr = alloca %struct.fptr, align 8
x.addr: {
	i32 20
,
},
call3: {
	call4,
},
call6: {
	call4,
},
################## pointer before #################
  %b_fptr = alloca %struct.fptr, align 8
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
call3: {
	call4,
},
call6: {
	call4,
},
################## pointer before #################
  %s_fptr = alloca %struct.fsptr, align 8
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
b_fptr: {
	i32 22
,
},
call3: {
	call4,
},
call6: {
	call4,
},
################## pointer before #################
  %r_fptr = alloca %struct.fsptr, align 8
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
call3: {
	call4,
},
call6: {
	call4,
},
################## pointer before #################
  %w_fptr = alloca %struct.fsptr*, align 8
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
call3: {
	call4,
},
call6: {
	call4,
},
################## pointer before #################
  store i32 %x, i32* %x.addr, align 4
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
call3: {
	call4,
},
call6: {
	call4,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !100, metadata !DIExpression()), !dbg !101
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !102, metadata !DIExpression()), !dbg !103
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
x.addr: {
	i32 20
,
},
a_fptr: {
	i32 21
,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !106, metadata !DIExpression()), !dbg !107
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	i32 22
,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !110, metadata !DIExpression()), !dbg !111
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	i32 23
,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !114, metadata !DIExpression()), !dbg !115
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	i32 24
,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !118, metadata !DIExpression()), !dbg !119
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %cmp = icmp sgt i32 %4, 1, !dbg !49
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  br i1 %cmp, label %if.then, label %if.else, !dbg !50
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  br label %if.end, !dbg !55
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  br label %if.end
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
################## pointer before #################
  ret void, !dbg !64
i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},
6: moo------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %sub = sub nsw i32 %0, %1, !dbg !27
  ret i32 %sub, !dbg !28


	in : 
	out :  i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  %t_fptr = alloca i32 (i32, i32)*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
  ret i32 %call, !dbg !47


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},

	out :  i32 11
: {
	b,
},
i32 10
: {
	a,
},
a.addr: {
	i32 10
,
},
b.addr: {
	i32 11
,
},
c_fptr.addr: {
	i32 12
,
},
d_fptr.addr: {
	i32 13
,
},
t_fptr: {
	i32 14
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	c_fptr,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	c_fptr,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	d_fptr,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	d_fptr,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	d_fptr,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	c_fptr,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	c_fptr,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	c_fptr,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	a,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	b,
},
i32 12
: {
	c_fptr,
},
i32 13
: {
	d_fptr,
},
i32 14
: {
	c_fptr,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},

	out :  i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 19
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},


entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : call3: {
	call4,
},
call6: {
	call4,
},

	out :  i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

------------------------------
################## pointer before #################
  %a.addr = alloca i32, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fptr*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fptr*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
################## pointer before #################
  %t_fptr = alloca i32 (i32, i32)*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !41, metadata !DIExpression()), !dbg !42
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !43, metadata !DIExpression()), !dbg !44
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !45, metadata !DIExpression()), !dbg !46
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !47, metadata !DIExpression()), !dbg !48
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !49, metadata !DIExpression()), !dbg !50
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	i32 19
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	i32 19
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	x,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
################## pointer before #################
  ret i32 %call, !dbg !47
i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	x,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},
7: clever------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %sub = sub nsw i32 %0, %1, !dbg !27
  ret i32 %sub, !dbg !28


	in : 
	out :  i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  %t_fptr = alloca i32 (i32, i32)*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
  ret i32 %call, !dbg !47


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},

	out :  i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	x,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
call: {
	call,
},

	out :  i32 18
: {
	minus,
	plus,
},
i32 15
: {
	i32 1
,
},
i32 17
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 16
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 15
,
},
b.addr: {
	i32 16
,
},
c_fptr.addr: {
	i32 17
,
},
d_fptr.addr: {
	i32 18
,
},
t_fptr: {
	i32 19
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 19
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},


entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : call3: {
	call4,
},
call6: {
	call4,
},

	out :  i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

------------------------------
################## pointer before #################
  %a.addr = alloca i32, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
call: {
	call,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
call: {
	call,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fsptr*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
call: {
	call,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fsptr*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
call: {
	call,
},
################## pointer before #################
  %t_fptr = alloca %struct.fptr, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
call: {
	call,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !69, metadata !DIExpression()), !dbg !70
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 31
: {
	i32 1
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 31
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !71, metadata !DIExpression()), !dbg !72
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 31
: {
	i32 1
,
},
################## pointer before #################
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 31
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !73, metadata !DIExpression()), !dbg !74
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
################## pointer before #################
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !75, metadata !DIExpression()), !dbg !76
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !77, metadata !DIExpression()), !dbg !78
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
p_fptr: {
	t_fptr,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 35
,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 35
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 35
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
################## pointer before #################
  ret i32 %call4, !dbg !50
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 35
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},
8: foo------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %sub = sub nsw i32 %0, %1, !dbg !27
  ret i32 %sub, !dbg !28


	in : 
	out :  i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  %t_fptr = alloca i32 (i32, i32)*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
  ret i32 %call, !dbg !47


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},

	out :  i32 29
: {
	i32 19
,
},
i32 28
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 27
: {
	x,
},
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
},
a.addr: {
	i32 26
,
},
b.addr: {
	i32 27
,
},
c_fptr.addr: {
	i32 28
,
},
d_fptr.addr: {
	i32 29
,
},
t_fptr: {
	i32 30
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	x,
},
i32 30
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 26
: {
	i32 1
,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
call: {
	call,
},

	out :  a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 35
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},


entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : call3: {
	call4,
},
call6: {
	call4,
},

	out :  i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

------------------------------
################## pointer before #################
  %a.addr = alloca i32, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
################## pointer before #################
  %b.addr = alloca i32, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
################## pointer before #################
  %c_fptr.addr = alloca %struct.fptr*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
################## pointer before #################
  %d_fptr.addr = alloca %struct.fptr*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
################## pointer before #################
  %t_fptr = alloca i32 (i32, i32)*, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
################## pointer before #################
  store i32 %a, i32* %a.addr, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !41, metadata !DIExpression()), !dbg !42
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  store i32 %b, i32* %b.addr, align 4
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !43, metadata !DIExpression()), !dbg !44
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 37
: {
	x,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 37
: {
	x,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !45, metadata !DIExpression()), !dbg !46
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !47, metadata !DIExpression()), !dbg !48
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !49, metadata !DIExpression()), !dbg !50
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	i32 19
,
	i32 35
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	i32 19
,
	i32 35
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	x,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
################## pointer before #################
  ret i32 %call, !dbg !47
a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	x,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},
9: clever------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %sub = sub nsw i32 %0, %1, !dbg !27
  ret i32 %sub, !dbg !28


	in : 
	out :  i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  %t_fptr = alloca i32 (i32, i32)*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
  ret i32 %call, !dbg !47


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},

	out :  a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	x,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
call: {
	call,
},

	out :  a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 35
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},


entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : call3: {
	call4,
},
call6: {
	call4,
},

	out :  i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

------------------------------
10: malloc------------------------------

entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %add = add nsw i32 %0, %1, !dbg !27
  ret i32 %add, !dbg !28


	in : 
	out :  i32 1
: {
	b,
},
a.addr: {
	i32 0
,
},
b.addr: {
	i32 1
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},
i32 0
: {
	a,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !21, metadata !DIExpression()), !dbg !22
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !23, metadata !DIExpression()), !dbg !24
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
  %sub = sub nsw i32 %0, %1, !dbg !27
  ret i32 %sub, !dbg !28


	in : 
	out :  i32 8
: {
	a,
},
i32 9
: {
	b,
},
a.addr: {
	i32 8
,
},
b.addr: {
	i32 9
,
},
  %0 = load i32, i32* %a.addr, align 4, !dbg !25
: {
	a,
},
  %1 = load i32, i32* %b.addr, align 4, !dbg !26
: {
	b,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fptr*, align 8
  %d_fptr.addr = alloca %struct.fptr*, align 8
  %t_fptr = alloca i32 (i32, i32)*, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fptr* %c_fptr, %struct.fptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fptr* %d_fptr, %struct.fptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata i32 (i32, i32)** %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %0, i32 0, i32 0, !dbg !34
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
  store i32 (i32, i32)* %1, i32 (i32, i32)** %t_fptr, align 8, !dbg !32
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %2, i32 0, i32 0, !dbg !36
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
  %p_fptr2 = getelementptr inbounds %struct.fptr, %struct.fptr* %4, i32 0, i32 0, !dbg !38
  store i32 (i32, i32)* %3, i32 (i32, i32)** %p_fptr2, align 8, !dbg !39
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
  %p_fptr3 = getelementptr inbounds %struct.fptr, %struct.fptr* %6, i32 0, i32 0, !dbg !42
  store i32 (i32, i32)* %5, i32 (i32, i32)** %p_fptr3, align 8, !dbg !43
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
  %call = call i32 %7(i32 %8, i32 %9), !dbg !44
  ret i32 %call, !dbg !47


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},

	out :  a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	i32 19
,
	i32 35
,
},
a.addr: {
	i32 36
,
},
b.addr: {
	i32 37
,
},
c_fptr.addr: {
	i32 38
,
},
d_fptr.addr: {
	i32 39
,
},
t_fptr: {
	i32 40
,
},
  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr: {
	  %0 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
: {
	i32 19
,
	i32 35
,
},
p_fptr1: {
	  %2 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !35
,
},
  %3 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr1, align 8, !dbg !36
: {
	i32 19
,
	i32 35
,
},
  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
: {
	i32 19
,
	i32 35
,
},
p_fptr2: {
	  %4 = load %struct.fptr*, %struct.fptr** %c_fptr.addr, align 8, !dbg !37
,
},
  %5 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
p_fptr3: {
	  %6 = load %struct.fptr*, %struct.fptr** %d_fptr.addr, align 8, !dbg !41
,
},
  %7 = load i32 (i32, i32)*, i32 (i32, i32)** %t_fptr, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %8 = load i32, i32* %a.addr, align 4, !dbg !45
: {
	i32 1
,
},
  %9 = load i32, i32* %b.addr, align 4, !dbg !46
: {
	x,
},
i32 37
: {
	x,
},
i32 38
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 39
: {
	i32 19
,
	i32 35
,
},
i32 40
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 36
: {
	i32 1
,
},


entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %c_fptr.addr = alloca %struct.fsptr*, align 8
  %d_fptr.addr = alloca %struct.fsptr*, align 8
  %t_fptr = alloca %struct.fptr, align 8
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !23, metadata !DIExpression()), !dbg !24
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !25, metadata !DIExpression()), !dbg !26
  store %struct.fsptr* %c_fptr, %struct.fsptr** %c_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %c_fptr.addr, metadata !27, metadata !DIExpression()), !dbg !28
  store %struct.fsptr* %d_fptr, %struct.fsptr** %d_fptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fsptr** %d_fptr.addr, metadata !29, metadata !DIExpression()), !dbg !30
  call void @llvm.dbg.declare(metadata %struct.fptr* %t_fptr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %0, i32 0, i32 0, !dbg !34
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
  %2 = bitcast %struct.fptr* %t_fptr to i8*, !dbg !35
  %3 = bitcast %struct.fptr* %1 to i8*, !dbg !35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !35
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
  %sptr1 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %4, i32 0, i32 0, !dbg !37
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %6, i32 0, i32 0, !dbg !39
  store %struct.fptr* %5, %struct.fptr** %sptr2, align 8, !dbg !40
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
  %sptr3 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %9, i32 0, i32 0, !dbg !44
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
  %call = call i32 @clever(i32 %7, i32 %8, %struct.fptr* %10, %struct.fptr* %t_fptr), !dbg !45
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %t_fptr, i32 0, i32 0, !dbg !46
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
  %call4 = call i32 %11(i32 %12, i32 %13), !dbg !49
  ret i32 %call4, !dbg !50


	in : a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
call: {
	call,
},

	out :  a: {
	i32 1
,
},
b: {
	x,
},
c_fptr: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
d_fptr: {
	minus,
	plus,
},
a.addr: {
	i32 31
,
},
b.addr: {
	i32 32
,
},
c_fptr.addr: {
	i32 33
,
},
d_fptr.addr: {
	i32 34
,
},
t_fptr: {
	i32 35
,
},
  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr: {
	  %0 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !33
,
},
  %1 = load %struct.fptr*, %struct.fptr** %sptr, align 8, !dbg !34
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
: {
	minus,
	plus,
},
sptr1: {
	  %4 = load %struct.fsptr*, %struct.fsptr** %d_fptr.addr, align 8, !dbg !36
,
},
  %5 = load %struct.fptr*, %struct.fptr** %sptr1, align 8, !dbg !37
: {
	minus,
	plus,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
: {
	minus,
	plus,
},
sptr2: {
	  %6 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !38
,
},
  %7 = load i32, i32* %a.addr, align 4, !dbg !41
: {
	i32 1
,
},
  %8 = load i32, i32* %b.addr, align 4, !dbg !42
: {
	x,
},
  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr3: {
	  %9 = load %struct.fsptr*, %struct.fsptr** %c_fptr.addr, align 8, !dbg !43
,
},
  %10 = load %struct.fptr*, %struct.fptr** %sptr3, align 8, !dbg !44
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call: {
	call,
},
p_fptr: {
	t_fptr,
},
  %11 = load i32 (i32, i32)*, i32 (i32, i32)** %p_fptr, align 8, !dbg !46
: {
	i32 35
,
},
  %12 = load i32, i32* %a.addr, align 4, !dbg !47
: {
	i32 1
,
},
  %13 = load i32, i32* %b.addr, align 4, !dbg !48
: {
	x,
},
i32 32
: {
	x,
},
i32 33
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 31
: {
	i32 1
,
},
i32 34
: {
	minus,
	plus,
},


entry:
  %x.addr = alloca i32, align 4
  %a_fptr = alloca %struct.fptr, align 8
  %b_fptr = alloca %struct.fptr, align 8
  %s_fptr = alloca %struct.fsptr, align 8
  %r_fptr = alloca %struct.fsptr, align 8
  %w_fptr = alloca %struct.fsptr*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !23, metadata !DIExpression()), !dbg !24
  call void @llvm.dbg.declare(metadata %struct.fptr* %a_fptr, metadata !25, metadata !DIExpression()), !dbg !26
  %p_fptr = getelementptr inbounds %struct.fptr, %struct.fptr* %a_fptr, i32 0, i32 0, !dbg !27
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr, align 8, !dbg !28
  call void @llvm.dbg.declare(metadata %struct.fptr* %b_fptr, metadata !29, metadata !DIExpression()), !dbg !30
  %p_fptr1 = getelementptr inbounds %struct.fptr, %struct.fptr* %b_fptr, i32 0, i32 0, !dbg !31
  store i32 (i32, i32)* @minus, i32 (i32, i32)** %p_fptr1, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata %struct.fsptr* %s_fptr, metadata !33, metadata !DIExpression()), !dbg !34
  %sptr = getelementptr inbounds %struct.fsptr, %struct.fsptr* %s_fptr, i32 0, i32 0, !dbg !35
  store %struct.fptr* %a_fptr, %struct.fptr** %sptr, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata %struct.fsptr* %r_fptr, metadata !37, metadata !DIExpression()), !dbg !38
  %sptr2 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %r_fptr, i32 0, i32 0, !dbg !39
  store %struct.fptr* %b_fptr, %struct.fptr** %sptr2, align 8, !dbg !40
  call void @llvm.dbg.declare(metadata %struct.fsptr** %w_fptr, metadata !41, metadata !DIExpression()), !dbg !42
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !43
  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
  store %struct.fsptr* %0, %struct.fsptr** %w_fptr, align 8, !dbg !42
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
  %2 = bitcast %struct.fsptr* %1 to i8*, !dbg !46
  %3 = bitcast %struct.fsptr* %s_fptr to i8*, !dbg !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !dbg !46
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
  %cmp = icmp sgt i32 %4, 1, !dbg !49
  br i1 %cmp, label %if.then, label %if.else, !dbg !50


	in : call3: {
	call4,
},
call6: {
	call4,
},

	out :  i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.then:                                          ; preds = %entry
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
  %call3 = call i32 @foo(i32 1, i32 %5, %struct.fsptr* %6, %struct.fsptr* %r_fptr), !dbg !54
  br label %if.end, !dbg !55


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.else:                                          ; preds = %entry
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
  %sptr4 = getelementptr inbounds %struct.fsptr, %struct.fsptr* %7, i32 0, i32 0, !dbg !58
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
  %p_fptr5 = getelementptr inbounds %struct.fptr, %struct.fptr* %8, i32 0, i32 0, !dbg !59
  store i32 (i32, i32)* @plus, i32 (i32, i32)** %p_fptr5, align 8, !dbg !60
  br label %if.end


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},


if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
  %call6 = call i32 @foo(i32 1, i32 %9, %struct.fsptr* %10, %struct.fsptr* %s_fptr), !dbg !63
  ret void, !dbg !64


	in : i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

	out :  i32 2
: {
	x,
},
i32 7
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
i32 25
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
x.addr: {
	i32 2
,
	i32 20
,
},
a_fptr: {
	plus,
},
b_fptr: {
	minus,
},
s_fptr: {
	plus,
},
r_fptr: {
	minus,
},
w_fptr: {
	i32 7
,
	i32 25
,
},
p_fptr: {
	a_fptr,
},
p_fptr1: {
	b_fptr,
},
sptr: {
	s_fptr,
},
sptr2: {
	r_fptr,
},
  %1 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !45
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
  %4 = load i32, i32* %x.addr, align 4, !dbg !47
: {
	x,
},
  %5 = load i32, i32* %x.addr, align 4, !dbg !51
: {
	x,
},
  %6 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !53
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call3: {
	call4,
},
  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
sptr4: {
	  %7 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !56
,
},
  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
: {
	plus,
},
p_fptr5: {
	  %8 = load %struct.fptr*, %struct.fptr** %sptr4, align 8, !dbg !58
,
},
  %9 = load i32, i32* %x.addr, align 4, !dbg !61
: {
	x,
},
  %10 = load %struct.fsptr*, %struct.fsptr** %w_fptr, align 8, !dbg !62
: {
	  %0 = bitcast i8* %call to %struct.fsptr*, !dbg !44
,
},
call6: {
	call4,
},
i32 20
: {
	x,
},

------------------------------
26: clever
41: malloc
46: foo
51: foo
sh: 1: pause: not found
